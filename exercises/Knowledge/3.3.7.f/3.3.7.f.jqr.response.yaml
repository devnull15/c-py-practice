- type: MC
  resp: 1
  text: >-
    In one common implementation of a balanced binary search tree containing n
    nodes, transformations are performed on the tree when:
  choices:
    - a value greater than the root value is inserted into the tree.
    - the heights of left and right subtrees of any node differ by more than 1.
    - the height of the tree exceeds n/2.
    - any node is removed from the tree.
- type: MA
  resp:
    - 0
    - 2
    - 3
    - 4
  text: >-
    Balanced binary search trees allow which operations to be conducted in O(log
    n) worst-case time?
  choices:
    - insertion
    - ordered enumeration
    - removal
    - lookup
    - find_min
- type: TF
  resp: 'false'
  text: >-
    Balanced binary search trees do not require any additional overhead to
    implement.
  choices: []
- type: MA
  resp:
    - 0
    - 1
  text: 'Red-black trees:'
  choices:
    - are a type of balanced binary search tree.
    - have the same number of black nodes in each path from root to leaf.
    - do not allow black nodes to have black child nodes.
    - do not offer guarantees for worst-case time for removal.
