- type: TF
  resp: 'true'
  text: >-
    Assume function1() has an int pointer pointing to a value of 1. It passes
    the pointer to function2(int* pointer), which modifies the value at that
    pointer to 2, but does not return that value. The value at the pointer in
    function1() is now 2.
  choices: []
- type: TF
  resp: 'false'
  text: >-
    Like a normal variable, a pointer automatically allocates memory for the
    value(s) it points to.
  choices: []
- type: MC
  resp: 0
  text: >-
    Placing a _ before referencing a ptr instead references the value at that
    pointer, whereas placing a _ before referencing a normal variable instead
    references the address of where that variable is stored in memory.
  choices:
    - asterisk (*), ampersand(&)
    - percent (&), asterisk (*)
    - asterisk (*), percent (%)
    - exclamation (!), asterisk(*)
