- choices: []
  hash: $2b$11$ced10rtx/IQR6ingCKEaiO9M1tBU70eDBKHv0LMKXmTYjIio9hkGS
  text: In C, all typecasts are explicit, meaning that C never converts types without
    the user explicitly telling it to do so.
  type: TF
- choices:
  - a larger, a smaller
  - a smaller, a larger
  - any, any other
  hash: $2b$11$yp.oJbaNKpP3ShjS3XxGyupEV87q7FLCEUfnUrYMPon/J/LEYZRSi
  text: When casting a variable from __ type to __ type, an explicit type cast should
    be used so the compiler does not throw an error or warning.
  type: MC
- choices:
  - Nothing. As long as the return type can hold a decimal, it does not matter if
    the two integers cannot hold decimals.
  - The first integer only. If C performs division on an integer, only an integer
    can be produced, even if the answer has a decimal.
  - Both integers. C cannot produce a number with a decimal through division unless
    both numbers can hold decimals.
  hash: $2b$11$hB2q3dzbI1vSYJqD1EmIgeNuY5PhcM6YHeX7eXZGF4MGi2rwXHr7W
  text: What should be typecast when dividing two integers, and why?
  type: MC
