- type: MA
  resp:
    - 1
    - 3
    - 5
    - 6
    - 8
    - 9
  text: Which of the following are attibutes of input validation?
  choices:
    - >-
      Modify the input so that it meets the requirements of that data before
      allowing any processing with said data.
    - Check to ensure that the data type is correct&#58; Integer, string, etc.
    - >-
      Remove dashes '-' from a Social Security Number (SSN) as the dash
      character could potenially be used in an SQL injection attack.
    - >-
      Check the length of the data&#58; Zip Code should be exactly five
      characters long.
    - >-
      Transposing dashes to a benign character as the dash character could
      potenially be used in an SQL injection attack.
    - Check for format&#58; Date should be in a format like XX/XX/XXXX.
    - Check for resonability&#58; If asking someone their age and they enter 2.
    - Escape values so they are taken literally.
    - >-
      Check for proper range&#58; Month should be a value from and including 1
      through 12.
    - Check for values that would cause program crashing such as divide by zero.
- type: MA
  resp:
    - 0
    - 1
    - 2
    - 3
    - 4
  text: Input validation has been performed. What are potential next steps?
  choices:
    - Log the success or failure of the input validation.
    - Accept the input.
    - Drop the input.
    - Notify the user that the input failed.
    - Perform sanitization on the failed input.
- type: MA
  resp:
    - 0
    - 2
    - 4
    - 7
  text: Which of the following are attibutes of input sanitization?
  choices:
    - >-
      Modify the input so that it meets the requirements of that data before
      allowing any processing with said data.
    - Check to ensure that the data type is correct&#58; Integer, string, etc.
    - >-
      Remove dashes '-' from a Social Security Number (SSN) as the dash
      character could potenially be used in an SQL injection attack.
    - >-
      Check the length of the data&#58; Zip Code should be exactly five
      characters long.
    - >-
      Transposing dashes to a benign character as the dash character could
      potenially be used in an SQL injection attack.
    - Check for format&#58; Date should be in a format like XX/XX/XXXX.
    - Check for resonability&#58; If asking someone their age and they enter 2.
    - Escape values so they are taken literally.
    - >-
      Check for proper range&#58; Month should be a value from and including 1
      through 12.
    - Check for values that would cause program crashing such as divide by zero.
- type: MA
  resp:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
  text: Failure to perform input validation can result in?
  choices:
    - SQL injection.
    - Application instability.
    - Directory traversal.
    - Data corruption.
    - Buffer overflow.
    - Cross-site scripting.
    - Null byte injection.
    - Uncontrolled format string.
- type: MA
  resp:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
  text: Failure to perform input sanitization can result in?
  choices:
    - SQL injection.
    - Application instability.
    - Directory traversal.
    - Data corruption.
    - Buffer overflow.
    - Cross-site scripting.
    - Null byte injection.
    - Uncontrolled format string.
- type: MA
  resp:
    - 3
    - 4
  text: What are good techniques to perform data validation?
  choices:
    - Client side javascript to check the input before sending to the server.
    - >-
      Remove the need for input validation such as drop down boxes that force
      the user into selection of only authorized items.
    - >-
      Create a custom front end for the client that performs all checks before
      sending to the backend; thus offloading resources from the server.
    - >-
      Client side javascript to check the input before sending to the server in
      conjunction with code on the server to ensure that the transmitted input
      is valid.
    - Validation checks only on the server.
